###JD Decisions###

#Written by:
#Drikus Kuiper
#Matthew Clohessy


decisions = {

	adopt_seros_imperialism = {
		only_independent = yes
		is_high_prio = yes
		ai_check_interval = 60
		potential = {
			culture_group = fish_group
			is_nomadic = no
			is_feudal = yes
			NOT = { government = seros_government }
			has_dlc = "Jade Dragon"
			holy_order = no
			OR = {
				ai = no
				AND = {
					trait = proud
					prestige = 40000
				}
				AND = {
					trait = ambitious
					prestige = 40000
				}
				prestige = 120000
			}
		}
		allow = {
			independent = yes
			is_adult = yes
			prisoner = no
			NOT = { trait = incapable }
			is_tributary = no
			tier = EMPEROR
			realm_size = 200
			conditional_tooltip = {
				trigger = { religion = qisma }
				prestige = 8000
				wealth = 500
			}
			conditional_tooltip = {
				trigger = { NOT = { religion = qisma } }
				prestige = 16000
				wealth = 1000
			}

			seros = {
				show_scope_change = no
				offmap_ruler = { NOT = { dynasty = ROOT } }
			}
		}
		effect = {
			if = {
			    limit = { religion = qisma }
			    wealth = -500
			}
			else = {
			    wealth = -1000
			}
			if = {
				limit = {
					has_dlc = "Holy Fury"
					NOT = {
						any_owned_bloodline = { 
							has_bloodline_flag = created_bloodline
						}
					}
				}
				character_event = { id = HF.24240 tooltip = tooltip_evt_hf_24240 }
			}
			custom_tooltip = {
				text = adopt_seros_imperialism_tt
				hidden_effect = {
					create_title = {
						tier = EMPEROR
						landless = no
						temporary = no
						custom_created = yes
						culture = ROOT
						holder = ROOT
						base_title = THIS
						short_name = yes
						copy_title_laws = yes
					}
					new_title = {
						set_title_flag = uses_temple_names_by_script #Titles with this flag give their heirs a temple name via on_death event
						set_title_flag = pretender_seros_empire #Blocks all grace interactions
						adjective = e_seros_west_governor_adj #Use WP adj as it is "seros" but also gives the right one in different languages
						random_list = { #Random Empire name that seros doesn't have
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = ivellion_seros } } }
								set_name = "Ivellion Empire"
								set_title_flag = seros_name_Ivellion
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = zhuirentalon_seros } } }
								set_name = "Zhuirentalon Empire"
								set_title_flag = seros_name_Zhuirentalon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = caelynnon_seros } } }
								set_name = "Caelynnon Empire"
								set_title_flag = seros_name_Caelynnon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = edraelen_seros } } }
								set_name = "Edraelen Empire"
								set_title_flag = seros_name_Edraelen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = gelmalgaldon_seros } } }
								set_name = "Gelmalgaldon Empire"
								set_title_flag = seros_name_Gelmalgaldon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = erwedhenen_seros } } }
								set_name = "Erwedhenen Empire"
								set_title_flag = seros_name_Erwedhenen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = lysanderen_seros } } }
								set_name = "Lysanderen Empire"
								set_title_flag = seros_name_Lysanderen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = jehastran_seros } } }
								set_name = "Jehastran Empire"
								set_title_flag = seros_name_Jehastran
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = perwraekon_seros } } }
								set_name = "Perwraekon Empire"
								set_title_flag = seros_name_Perwraekon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = nacaciaen_seros } } }
								set_name = "Nacaciaen Empire"
								set_title_flag = seros_name_Nacaciaen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = shehstreken_seros } } }
								set_name = "ShehStreken Empire"
								set_title_flag = seros_name_ShehStreken
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = zocrixen_seros } } }
								set_name = "Zocrixen Empire"
								set_title_flag = seros_name_Zocrixen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = hilazieon_seros } } }
								set_name = "Hilazieon Empire"
								set_title_flag = seros_name_Hilazieon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = gokekuen_seros } } }
								set_name = "Gokekuen Empire"
								set_title_flag = seros_name_Gokekuen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = aggezzenon_seros } } }
								set_name = "Aggezzenon Empire"
								set_title_flag = seros_name_Aggezzenon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = aekteshon_seros } } }
								set_name = "Aekteshon Empire"
								set_title_flag = seros_name_Aekteshon
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = drazrosen_seros } } }
								set_name = "Drazrosen Empire"
								set_title_flag = seros_name_Drazrosen
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = thaalison_seros } } }
								set_name = "Thaalison Empire"
								set_title_flag = seros_name_Thaalison
							}
							1 = { 
								trigger = { NOT = { seros = { has_offmap_name = sheshon_seros } } }
								set_name = "Sheshon Empire"
								set_title_flag = seros_name_Sheshon
							}
						}
						add_law = {
							law = succ_primogeniture
							cooldown = no
							opinion_effect = no
						}
					}
				}
			}
			any_demesne_title = {
				limit = { 
					tier = EMPEROR
					NOT = { has_title_flag = pretender_seros_empire }
				}
				destroy_landed_title = THIS
			}
			set_government_type = seros_imperial_government
			custom_tooltip = { text = adopt_seros_imperialism_gov_tt }
		}
	}
	
	raise_seros_honor_guard = {
		only_playable = yes
		is_high_prio = yes
		is_mercenary = yes
		potential = {
			is_landed = yes
			OR = {
				any_spouse = { has_character_flag = seros_honor_guard } #Need to be married to seros prince/princess
				any_consort = { has_character_flag = seros_honor_guard } #Need to be married to seros prince/princess
				any_courtier = {
					is_landed = no
					liege = { character = ROOT }
					dynasty = ROOT
					OR = {
						any_spouse = { has_character_flag = seros_honor_guard }
						any_consort = { has_character_flag = seros_honor_guard }
					}
				}
			}
			OR = {
				ai = no
				any_war = {
					OR = {
						any_defender = {
							character = ROOT
							is_primary_war_defender = yes
						}
						any_attacker = {
							character = ROOT
							is_primary_war_attacker = yes
						}
					}
				}
			}
		}
		allow = {
			custom_tooltip = {
				text = primary_defender_or_attacker_tt
				hidden_tooltip = {
					any_war = {
						OR = {
							any_defender = {
								character = ROOT
								is_primary_war_defender = yes
							}
							any_attacker = {
								character = ROOT
								is_primary_war_attacker = yes
							}
						}
					}
				}
			}
			custom_tooltip = {
				text = earmarked_regiments_tt
				hidden_tooltip = {
					NOT = {
						has_earmarked_regiments = honor_guard
					}
				}
			}
			custom_tooltip = {
				text = raise_seros_honor_guard_TT
				NOT = { has_character_modifier = jd_seros_honor_guard_timer }
			}
		}
		effect = {
			hidden_effect = {
				add_character_modifier = { #Can't use it too often
					name = jd_seros_honor_guard_timer
					hidden = yes
					years = 1
				}
			}
			if = {
				limit = {
					tier = emperor
				}
				capital_scope = {
					PREV = {
						spawn_unit = {
							owner = ROOT
							province = PREV
							home = PREV
							troops = {
								archers = { 1000 1000 }
								heavy_infantry = { 200 200 }
								pikemen = { 800 800 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = honor_guard
						}
					}
				}
				break = yes
			}
			if = {
				limit = {
					tier = king
				}
				capital_scope = {
					PREV = {
						spawn_unit = {
							owner = ROOT
							province = PREV
							home = PREV
							troops = {
								archers = { 800 800 }
								heavy_infantry = { 100 100 }
								pikemen = { 600 600 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = honor_guard
						}
					}
				}
				break = yes
			}
			if = {
				limit = {
					tier = duke
				}
				capital_scope = {
					PREV = {
						spawn_unit = {
							owner = ROOT
							province = PREV
							home = PREV
							troops = {
								archers = { 500 500 }
								heavy_infantry = { 100 100 }
								pikemen = { 400 400 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = honor_guard
						}
					}
				}
				break = yes
			}
			capital_scope = {
				PREV = {
					spawn_unit = {
						owner = ROOT
						province = PREV
						home = PREV
						troops = {
							archers = { 250 250 }
							heavy_infantry = { 50 50 }
							pikemen = { 200 200 }
						}
						attrition = 1.0
						disband_on_peace = yes
						maintenance_multiplier = 0.25
							earmark = honor_guard
					}
				}
			}

		}
		ai_will_do = {
			factor = 0 # decisions with the "is_mercenary" will not be calculated from the script
		}
	}
	
	raise_seros_regiment = {
		only_playable = yes
		is_high_prio = yes
		is_mercenary = yes
		potential = {
			is_playable = yes
			is_landed = yes
			is_tributary = {
				type = offmap
			}
		}
		allow = {
			war = yes
			custom_tooltip = {
				text = primary_defender_TT
				hidden_tooltip = {
					any_war = {
						any_defender = {
							character = ROOT
							is_primary_war_defender = yes
						}
					}
				}
			}
			custom_tooltip = {
				text = war_with_other_tributary_tt
				hidden_tooltip = {
					any_war = {
						any_attacker = {
							is_primary_war_attacker = yes
							NOT = { is_tributary = { type = offmap } }
						}
					}
				}
			}
			custom_tooltip = {
				text = already_raised_TT
				NOT = {
					has_earmarked_regiments = seros_regiment
				}
			}
			custom_tooltip = {
				text = raise_seros_regiment_TT
				NOT = { has_character_modifier = jd_seros_regiment_timer }
			}
			seros = {
				NOR = {
					has_status = seros_unrest
					has_status = seros_plague
					has_status = seros_famine
					has_status = seros_civil_war
					has_status = seros_sahuagin_invasion
					has_status = seros_merrow_invasion
				}
			}
		}
		effect = {
			hidden_effect = {
				add_character_modifier = { #Can't use it too often
					name = jd_seros_regiment_timer
					hidden = yes
					duration = 365
				}
			}
			capital_scope = {
				PREV = {
					if = {
						limit = {
							ROOT = {
								OR = {
									AND = {
										tier = EMPEROR
										is_nomadic = no
									}
									AND = {
										is_nomadic = yes
										num_of_count_titles_in_realm > 16
									}
								}
							}
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = ROOT
							troops = {
								light_infantry = { 1500 1500 }
								archers = { 1500 1500 }
								heavy_infantry = { 450 450 }
								pikemen = { 750 750 }
								light_cavalry = { 600 600 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = seros_regiment
						}
					}
					else_if = {
						limit = {
							ROOT = {
								OR = {
									tier = KING
									AND = {
										is_nomadic = yes
										num_of_count_titles_in_realm > 12
									}
								}
							}
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = ROOT
							troops = {
								light_infantry = { 1250 1250 }
								archers = { 1250 1250 }
								heavy_infantry = { 375 375 }
								pikemen = { 625 625 }
								light_cavalry = { 500 500 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = seros_regiment
						}
					}
					else_if = {
						limit = {
							ROOT = {
								OR = {
									tier = DUKE
									AND = {
										is_nomadic = yes
										AND = {
											is_nomadic = yes
											num_of_count_titles_in_realm > 8
										}
									}
								}
							}
						}
						spawn_unit = {
							province = PREV
							home = PREV
							owner = ROOT
							troops = {
								light_infantry = { 1000 1000 }
								archers = { 1000 1000 }
								heavy_infantry = { 300 300 }
								pikemen = { 500 500 }
								light_cavalry = { 400 400 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = seros_regiment
						}
					}
					else = {
						spawn_unit = {
							province = PREV
							home = PREV
							owner = ROOT
							troops = {
								light_infantry = { 750 750 }
								archers = { 750 750 }
								heavy_infantry = { 225 225 }
								pikemen = { 375 375 }
								light_cavalry = { 300 300 }
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							earmark = seros_regiment
						}
					}
				}
			}

		}
		ai_will_do = {
			factor = 0 # decisions with the "is_mercenary" will not be calculated from the script
		}
	}
			
	tributary_independence_seros = {
		only_playable = yes
		is_high_prio = yes
		ai_check_interval = 24
		potential = {
			is_tributary = {
				type = offmap
			}
		}
		allow = {
			seros = {
				OR = {
					has_status = seros_civil_war
					has_status = seros_sahuagin_invasion
					has_status = seros_merrow_invasion
				}
			}
		}
		effect = {
			any_suzerain = {
				remove_tributary = ROOT
			}
			if = {
				limit = { 
				    seros = { offmap_has_like = seros_likes_tributaries }
				}
				detract_grace_massive_effect = yes
			}
			else = { detract_grace_major_effect = yes }
			custom_tooltip = {
				text = tributary_independence_seros_tt
				add_character_modifier = {
					hidden = yes
					name = seros_grace_tributary_timer
					years = 30
				}
			}
			hidden_effect = { seros = { governor = { character_event = { id = SE.60010 } } } }
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.5 # Slow down
				NOT = {
					trait = ambitious
				}
			}
			modifier = {
				factor = 0
				OR = {
					trait = content
					trait = craven
				}
			}
		}
	}

	seros_sends_reinforcements = {
		ai_check_interval = 2
		only_independent = yes
		potential = {
			ai = yes
			war = yes
			seros = {
				governor = {
					character = ROOT
				}
				# Don't spawn reinforcements immediately
				had_offmap_tmp_flag = {
					flag = seros_entered_war
					years = 3
				}
				OR = {
					NOT = {
						# Only spawn reinforcements once
						has_offmap_flag = seros_sent_war_reinforcements
						# Exception: Really long wars
					}
					had_offmap_tmp_flag = {
						flag = seros_sent_war_reinforcements
						years = 30
					}
				}
				# Don't spawn reinforcements for the following statuses in seros.
				NOR = {
					has_status = seros_famine
					has_status = seros_civil_war
					has_status = seros_sahuagin_invasion
					has_status = seros_merrow_invasion
					has_status = seros_plague
				}
			}
			# Only if seros is losing a war by 50 war score.
			any_war = {
				OR = {
					AND = {
						attacker = {
							character = ROOT
						}
						NOT = { war_score = -49 }
					}
					AND = {
						defender = {
							character = ROOT
						}
						war_score = 50
					}
				}
			}
		}
		allow = {
		}
		effect = {
			seros = {
				clr_offmap_flag = seros_sent_war_reinforcements
				set_offmap_flag = seros_sent_war_reinforcements
			}
			
			### To manipulate the troop spawning for specific situations modify the parameter valiables (seros_war_troop_quantity, seros_war_troop_quality, seros_war_target_match_mult, and seros_war_minimum_commander_martial) after the following block.
			set_variable = {
				which = seros_war_troop_quantity
				value = 8
				# 8 regiments of ~500 units
			}
			set_variable = {
				which = seros_war_troop_quality
				value = 4
				# Value between 1-7 [A value less than 1 or higher than 7 will be evaluated as 1 and 7 respectively]
			}
			set_variable = {
				which = seros_war_target_match_mult
				value = 0.75
			}
			set_variable = {
				which = seros_war_minimum_commander_martial
				value = 14
			}
			###
			
			
			# Manipulate the parameter variables dependent on the current status in seros.
			seros_war_modify_variables_by_status_effect = yes
			# Manipulate the parameter variables dependent on the current century.
			seros_war_modify_variables_by_century_effect = yes
			
			### Match mult calculation against war enemies and sending notification events to enemy war leaders.
			any_war = {
				attacker = {
					if = {
						limit = {
							NOT = { character = ROOT }
							PREV = {
								defender = {
									character = ROOT
								}
							}
						}
						save_event_target_as = enemy
						PREV = {
							any_attacker = {
								save_event_target_as = temp_war_ally_calc
								ROOT = {
									# Match mult the variable against the opponents troops.
									export_to_variable = {
										which = seros_temp_troop_calc
										value = realm_levies
										who = event_target:temp_war_ally_calc
									}
									
									divide_variable = {
										which = seros_temp_troop_calc
										value = 500
									}
									
									multiply_variable = {
										which = seros_temp_troop_calc
										which = seros_war_target_match_mult
									}
									
									change_variable = {
										which = seros_war_troop_quantity
										which = seros_temp_troop_calc
									}
								}
							}
						}
					}
				}
				defender = {
					if = {
						limit = {
							NOT = { character = ROOT }
							PREV = {
								attacker = {
									character = ROOT
								}
							}
						}
						save_event_target_as = enemy
						PREV = {
							any_attacker = {
								save_event_target_as = temp_war_ally_calc
								ROOT = {
									# Match mult the variable against the opponents troops.
									export_to_variable = {
										which = seros_temp_troop_calc
										value = realm_levies_plus_allies
										who = event_target:temp_war_ally_calc
									}
									
									divide_variable = {
										which = seros_temp_troop_calc
										value = 500
									}
									
									multiply_variable = {
										which = seros_temp_troop_calc
										which = seros_war_target_match_mult
									}
									
									change_variable = {
										which = seros_war_troop_quantity
										which = seros_temp_troop_calc
									}
								}
							}
						}
					}
				}
			}
			
			# Hardcap at 50k troopspawn
			if = {
				limit = {	
					check_variable = {
						which = seros_war_troop_quantity
						value > 100
					}
				}
				set_variable = {
					which = seros_war_troop_quantity
					value = 100
				}
			}

			if = {
				limit = {
					FROM = {
						capital_scope = {
							NOT = { region = world_india }
						}
					}
				}
				1135 = { # Whamite Isle
					save_event_target_as = spawn_province
				}
			}
			else = {
				seros = { set_offmap_flag = troop_spawn_india_temp }
				1146 = { # The Wayrock
					save_event_target_as = spawn_province
				}
				set_variable = {
					which = boat_spawns
					which = seros_war_troop_quantity
				}
				multiply_variable = {
					which = boat_spawns
					value = 5
				}
				while = {
					limit = {
						check_variable = {
							which = boat_spawns
							value = 1
						}
					}
					change_variable = {
						which = boat_spawns
						value = -1
					}
					spawn_fleet = {
						province = 2014 # sea of fallen stars
						owner = ROOT
						disband_on_peace = yes
						troops =
						{
							galleys = { 1 1 }
						}
						merge = yes
					}
				}
			}
			
			event_target:enemy = {
				character_event = { id = SE.30047 }
			}
			
			seros_war_spawn_troops_effect = yes
			# Requires the current things to function properly:
			# event_target:spawn_province
			# variable: seros_war_troop_quality
			# variable: seros_war_troop_quantity
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}
}

#targeted_decisions = {
	#}