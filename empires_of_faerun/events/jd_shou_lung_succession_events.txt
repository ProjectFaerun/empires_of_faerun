namespace = JD

### Stuff that should probably be handled upon new dynasty for the emperor ###
#- new policy?
#- new status?
#- Western Protectorate ruler change?
#- Title (of shou_lung) name change
#- Policy change infrastructure (ended up being another file)
#- Handle tributaries
#- Handle grace values
#- Handle agreements? (Non-agression pacts break)

#TEMPLATE STUFFS/Milla
####Test events for delayed event bouncing
#character_event = { #initial event fired (hidden)
#    id = JD.10001
#    desc = EVTDESC_JD_10001
#    picture = GFX_evt_crusaders
#    border = GFX_event_normal_frame_war
#    is_triggered_only = yes
#    offmap = allow #(MUST HAVE)
#
#    trigger = {
#
#    }
#
#    immediate = {
#    	set_character_flag = sent_event_01
#    }
#
#    option = {      
#        name = EVTOPTA_JD_10001
#        custom_tooltip = { text = EVTOPTA_JD_10001_TT }
#        character_event = { id = JD.10002 }
#    }
#}
#
#character_event = { #delayed event that sends actual event to whomever (hidden)
#    id = JD.10002
#    hide_window = yes
#    is_triggered_only = yes
#    offmap = allow #offmap = allow (MUST HAVE)
#    immediate = {
#    	any_playable_ruler = {
#    		character_event = { id = JD.10003 } #send a visible event (like NEWS!)
#    	}
#    	set_character_flag = sent_event_02
#    }
#}
#
#character_event = { # Actual important and visible event for player
#    id = JD.10003
#    desc = EVTDESC_JD_10005
#	picture = GFX_evt_crusaders
#	border = GFX_event_normal_frame_war
#
#    is_triggered_only = yes
#
#    option = {      
#        name = EVTOPTA_JD_10001
#        custom_tooltip = { text = EVTOPTA_JD_10001_TT }
#        set_character_flag = received_event_03
#        #character_event = { id = JD.10002 days = 15 } #potential follow-up
#    }
#}

# on_offmap_ruler_changed: An offmap power changes its ruler. Triggers for the new ruler
# Root = New ruler
# From = Old ruler
# FromFrom = Offmap

#In case of dynasty change...  (fired from om_action: on_offmap_ruler_changed)
character_event = {
    id = JD.10005
    hide_window = yes

    has_dlc = "Jade Dragon"

    is_triggered_only = yes
    offmap = only #alternative would be "offmap = allow" (but that'd *include* them, not be *only* for them)

    trigger = {
        is_offmap_tag = shou_lung
    	NOT = { dynasty = FROM }
    }

    immediate = {
        if = {
            limit = {
                NOT = {
                    any_player = {
                        dynasty = ROOT
                    }
                }
            }
            clr_offmap_flag = shou_lung_invaded_player_dynasty
        }

    	#Sack the current western governor or not...
    	random_list = {
    		10 = {
    			modifier = {
    			 	factor = 10
			 		OR = {
    			 		AND = {
    			 			culture = shou
	    			 		governor = {
	    			 			NOT = { culture = shou }
	    			 		}
	    			 	}
	    			 	AND = {
    			 			culture = tuigan
	    			 		governor = {
	    			 			NOT = { culture = tuigan }
	    			 		}
	    			 	}
			 		}
    			}
    			modifier = {
    				factor = 1.5
    				has_status = shou_lung_civil_war
    			}
    			modifier = {
    				factor = 0.5
    				has_status = shou_lung_stable
    			}
                governor = {
                	trigger_switch = {
                		on_trigger = has_character_flag
                		spawning_a_displaced_royal = {
							shou_lung = {
								set_offmap_flag = waiting_to_spawn_a_displaced_royal
							}
                		}
                		spawning_a_tu_lung_invader = {
							shou_lung = {
								set_offmap_flag = waiting_to_spawn_a_tu_lung_invader
							}
                		}
                		spawning_a_rebel_general = {
							shou_lung = {
								set_offmap_flag = waiting_to_spawn_a_rebel_general
							}
                		}
                	}
                    death = { death_reason = death_went_back_to_shou_lung }
                }
    		}
    		10 = {
    			trigger = {
					shou_lung = {
						NOT = { has_offmap_tmp_flag = shou_lung_invaded_player_dynasty }
					}
				}
			}
    	}

    	#Pick a new state (Emperor dynasty) name...
    	if = {
    		limit = { NOT = { has_offmap_flag = rename_override } }
			random_list = {
	    		#All cultures...
	    		30 = {  #more likely, in general
	    			trigger = { NOT = { has_offmap_name = "tang_shou_lung" } }
	    			modifier = { #more likely to be picked by westerners
						factor = 3
						OR = {
							culture = tabotan
							culture = khatin
							culture = gugari
						}
					}
	    			set_offmap_name = "tang_shou_lung" 
	    		}
	    		30 = {  #more likely, in general
		    		trigger = { NOT = { has_offmap_name = "jin_shou_lung" } }
	    			modifier = { #more likely to be picked by westerners
						factor = 3
						OR = {
							culture = tabotan
							culture = khatin
							culture = gugari
						}
					}
					modifier = { #more likely if tu_lung
						factor = 3
						culture = shou
					}    			
	    			set_offmap_name = "jin_shou_lung"
	    		}
	    		20 = {
	    			trigger = { NOT = { has_offmap_name = "wei_shou_lung" } }
	    			set_offmap_name = "wei_shou_lung"
	    		}
	    		20 = {
	    			trigger = { NOT = { has_offmap_name = "qi_shou_lung" } }
	    			set_offmap_name = "qi_shou_lung"
	    		}
	    		30 = { #more likely, in general
	    			trigger = { NOT = { has_offmap_name = "zhou_shou_lung" } }
	    			set_offmap_name = "zhou_shou_lung"
	    		}
	    		30 = { #more likely, in general
	    			trigger = { NOT = { has_offmap_name = "han_shou_lung" } }
	    			modifier = { #more likely to be picked by westerners
						factor = 3
						OR = {
							culture = tabotan
							culture = khatin
							culture = gugari
						}
					}
	    			set_offmap_name = "han_shou_lung"
	    		}
	    		30 = { #more likely, in general
	    			trigger = { NOT = { has_offmap_name = "qin_shou_lung" } }
	    			set_offmap_name = "qin_shou_lung"
	    		}
	    		30 = { #more likely, in general
	    			trigger = { NOT = { has_offmap_name = "yan_shou_lung" } }
	    			set_offmap_name = "yan_shou_lung"
	    		}
	    		20 = {
	    			trigger = { NOT = { has_offmap_name = "zhao_shou_lung" } }
	    			set_offmap_name = "zhao_shou_lung"
	    		}

	    		#Foreign cultures...
	    		20 = {
	    			trigger = {
	    				NOT = { has_offmap_name = "liao_shou_lung" }
	    			}
	    			set_offmap_name = "liao_shou_lung"
	    		}
	    		20 = {
	    			trigger = {
	    				NOT = { has_offmap_name = "yuan_shou_lung" }
	    				culture = tuigan
	    			}
	    			modifier = { #more likely if tuigan
						factor = 5
						culture = tuigan
					}
					modifier = { #more likely if Borjigin
						factor = 100
						dynasty = 5700
					}
	    			set_offmap_name = "yuan_shou_lung"
	    		}
	    		20 = {
	    			trigger = {
	    				NOT = { has_offmap_name = "xia_shou_lung" }
	    				culture = shou
	    			}
	    			modifier = { #more likely if tangut (and possibly tuigan)
						factor = 5
						culture = shou
					}
	    			set_offmap_name = "xia_shou_lung"
	    		}
	    		20 = {
	    			trigger = {
	    				NOT = { has_offmap_name = "qing_shou_lung" }
	    				culture = shou
	    			}
	    			modifier = { #more likely if tu_lung
						factor = 3
						culture = shou
					}
					modifier = { #less likely to be picked early game
						factor = 0.1
						NOT = { year = 1200 }
					}
	    			set_offmap_name = "qing_shou_lung"
    			
	    		}
	    		10 = { #less likely, in general
	    			trigger = { NOT = { has_offmap_name = "dai_shou_lung" } }
	    			set_offmap_name = "dai_shou_lung"
	    		}
	    		10 = { #less likely, in general
	    			trigger = { NOT = { has_offmap_name = "cheng_shou_lung" } }
	    			set_offmap_name = "cheng_shou_lung"
	    		}

	    		#Han culture... (Picked with a lot less frequency than the above ones)
	    		5 = { #less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "liang_shou_lung" }
	    				culture = shou
	    			}
	    			set_offmap_name = "liang_shou_lung"
	    		}
	    		10 = {  #more likely within the category of Han, but less likely in general
		    		trigger = {
		    			NOT = { has_offmap_name = "song_shou_lung" }
		    			culture = shou
		    		}
	    			set_offmap_name = "song_shou_lung"
	    		}
	    		5 = { #less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "ming_shou_lung" }
	    				culture = shou
	    			}
					modifier = { #less likely to be picked early game
						factor = 0.1
						NOT = { year = 1200 }
					}
	    			set_offmap_name = "ming_shou_lung"
	    		}
	    		5 = { #less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "shu_shou_lung" }
	    				culture = shou
	    			}
	    			set_offmap_name = "shu_shou_lung"
	    		}
	    		5 = { #less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "wu_shou_lung" }
	    				culture = shou
	    			}
	    			set_offmap_name = "wu_shou_lung"
	    		}
	    		5 = { #less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "chu_shou_lung" }
	    				culture = shou
	    			}
	    			set_offmap_name = "chu_shou_lung"
	    		}
	    		5 = { #less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "yue_shou_lung" }
	    				culture = shou
	    			}
		  			set_offmap_name = "yue_shou_lung"
	    		}
	    		3 = { #even less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "yin_shou_lung" }
	    				culture = shou
	    			}
	    			set_offmap_name = "yin_shou_lung"
	    		}
	    		3 = { #even less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "shun_shou_lung" }
	    				culture = shou
	    			}
					modifier = { #less likely to be picked early game
						factor = 0.1
						NOT = { year = 1200 }
					}
	    			set_offmap_name = "shun_shou_lung"
	    		}
	    		3 = { #even less likely, in general
	    			trigger = {
	    				NOT = { has_offmap_name = "qi_shou_lung" }
	    				culture = shou
	    			}
	    			set_offmap_name = "qi_shou_lung"
	    		}
	    	}
		}

        #Break peace deal
        any_playable_ruler = {
            limit = {
				has_character_modifier = peace_deal_with_shou_lung
				OR = {
					ai = yes
					NOT = { has_offmap_news_enabled = FROMFROM }
					NOT = { is_within_diplo_range = ROOT }
				}
			}
            remove_character_modifier = peace_deal_with_shou_lung
        }

        #Reset Cooldowns
        any_playable_ruler = {
            limit = {
                OR = {
                    has_character_modifier = shou_lung_grace_send_gift_timer
                    has_character_modifier = shou_lung_grace_send_eunuch_timer
                    has_character_modifier = shou_lung_grace_send_concubine_timer
                    has_character_modifier = shou_lung_grace_tributary_timer
                    has_character_modifier = jd_shou_lung_boon_cd
                    has_character_modifier = shou_lung_force_open_cooldown
                    has_character_modifier = angered_shou_lung_modifier
                    has_character_modifier = shou_lung_imperial_trade_contract
					has_character_modifier = shou_lung_raid_grace_cd
                }
            }
            remove_character_modifier = shou_lung_grace_send_gift_timer
            remove_character_modifier = shou_lung_grace_send_eunuch_timer
            remove_character_modifier = shou_lung_grace_send_concubine_timer
            remove_character_modifier = shou_lung_grace_tributary_timer
            remove_character_modifier = jd_shou_lung_boon_cd
            remove_character_modifier = shou_lung_force_open_cooldown
            remove_character_modifier = angered_shou_lung_modifier
            remove_character_modifier = shou_lung_imperial_trade_contract
			remove_character_modifier = shou_lung_raid_grace_cd
        }

    	#Handle tributaries...
        governor = {
            any_tributary = {
                limit = { is_tributary = { type = offmap } }
                remove_tributary = PREV
                set_character_flag = was_tributary_of_shou_lung #for new dynasty notification event
            }
        }
		
		#Handle Kowtow trait
		any_playable_ruler = {
            limit = {
                OR = {
                    trait = kow_tow_completed_tier_1
                    trait = kow_tow_completed_tier_2
                    trait = kow_tow_completed_tier_3
                }
            }
            remove_trait = kow_tow_completed_tier_1
            remove_trait = kow_tow_completed_tier_2
            remove_trait = kow_tow_completed_tier_3
			clr_character_flag = went_on_kow_tow_pilgrimage
        }
    }
}




# on_startup event for dealing with old saves not having a proper name or government for the shou_lung Empire... 
character_event = {
    id = JD.10006
    is_triggered_only = yes

    hide_window = yes

    trigger = {
        ai = no
        shou_lung = {
            has_offmap_name = shou_lung_shou_lung
        }
    }

    immediate = {
        shou_lung = {
            governor = {
                set_government_type = celestial_bureaucracy
            }
            set_government_type = celestial_bureaucracy
            random_list = {
                10 = {  #pretty likely
                    set_offmap_name = "song_shou_lung"
                }
                5 = { #less likely
                    set_offmap_name = "liang_shou_lung"
                }
                5 = { #less likely
                    modifier = { #even less likely to be picked early game
                        factor = 0.1
                        NOT = { year = 1200 }
                    }
                    set_offmap_name = "ming_shou_lung"
                }
                5 = { #less likely
                    set_offmap_name = "shu_shou_lung"
                }
                5 = { #less likely
                    set_offmap_name = "wu_shou_lung"
                }
                5 = { #less likely
                    set_offmap_name = "chu_shou_lung"
                }
                5 = { #less likely
                    set_offmap_name = "yue_shou_lung"
                }
                3 = { #even less likely
                    set_offmap_name = "yin_shou_lung"
                }
                3 = { #even less likely
                    set_offmap_name = "qi_shou_lung"
                }
                3 = { #even less likely
                    modifier = { #less likely to be picked early game
                        factor = 0.1
                        NOT = { year = 1200 }
                    }
                    set_offmap_name = "shun_shou_lung"
                }
            }
        }
    }
}

character_event = {
	id = JD.31000
	hide_window = yes
	
	is_triggered_only = yes
	offmap = only
	
	immediate = {
		if = {
			limit = {
				FROMFROM = {
					is_offmap_tag = shou_lung
				}
			}
            log = "-------------------------------------"
            log = "shou_lung Logging:"
			log = "shou_lung succession - New Culture: [Root.Culture.GetName]"
			log = "shou_lung succession - Old Culture: [From.Culture.GetName]"
			log = "shou_lung succession - New Religion: [Root.Religion.GetName]"
			log = "shou_lung succession - Old Religion: [From.Religion.GetName]"
			log = "shou_lung succession - New Dynasty: [Root.GetOnlyDynastyName]"
			log = "shou_lung succession - Old Dynasty: [From.GetOnlyDynastyName]"
            log = "-------------------------------------"
		}
#		if = {
#			limit = {
#				is_female = yes
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_female_rulers
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				NOT = { is_female = yes }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_male_rulers
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				NOT = { dynasty = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_dynastic_changes
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				culture = shou
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_han
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				culture = tuigan
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_tuigan
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				culture = tu_lung
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_tu_lung
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				culture = khitan
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_khitan
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				culture = uyghur
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_uyghur
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				culture = kirghiz
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_kirghiz
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				NOR = {
#					culture = shou
#					culture = tuigan
#					culture = tu_lung
#					culture = khitan
#					culture = uyghur
#					culture = kirghiz
#				}
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_culture_swaps_to_something_else
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				religion = the_path
#				NOT = { religion = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_religion_swaps_to_the_path
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				religion = tengri_pagan
#				NOT = { religion = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_religion_swaps_to_tengri
#				value = 1
#			}
#		}
#		if = {
#			limit = {
#				NOR = {
#					religion = the_path
#					religion = tengri_pagan
#				}
#				NOT = { culture = FROM }
#			}
#			change_variable = {
#				which = global_shou_lung_amount_of_religion_swaps_to_something_else
#				value = 1
#			}
#		}
	}
}