seros_offmap_submission = {
	name = CB_NAME_OFFMAP_SUBMISSION
	war_name = WAR_NAME_OFFMAP_SUBMISSION
	sprite = 30
	truce_days = 365
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	
	defender_unoccupied_warscore = yes
	
	can_use = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
			NOT = { is_liege_or_above = FROM }
			mercenary = no
		}
		
		FROM = {
			in_revolt = no
			is_nomadic = no # Nomads cannot be subjugated
		}
	}

	on_success = {
		FROM = {
			piety = -100
			prestige = -100
			
			if = { # Remove Raid seros if active
				limit = {
					has_character_modifier = seros_raid_active
				}
				remove_character_modifier = seros_raid_active
				hidden_effect = {
					add_character_modifier = {
						name = seros_raid_grace_cd
						hidden = yes
						years = 5
					}
				}
			}
			
			custom_tooltip = {
				text = offmap_submission_tip
			}
				
			hidden_tooltip = {
				ROOT = {
					if = {
						limit = {
							num_of_count_titles_in_realm = 0
							ROOT_FROM = {
								num_of_count_titles_in_realm < 2
							}
						}
						ROOT_FROM = {
							any_realm_province = {
								county = {
									usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
								}
							}
						}
					}
					while = {
						count = 20 # We had an infinite loop at one point. It's been fixed, but safety first
						limit = {
							demesne_size_compared_to_limit < 1
							ROOT_FROM = {
								num_of_count_titles_in_realm > 1
							}
						}
						ROOT_FROM = {
							if = { # Take counties that border each other
								limit = {
									any_realm_title = {
										tier = COUNT
										ROOT_FROM = {
											NOT = {
												capital_scope = {
													title = PREVPREV
												}
											}
										}
										location = {
											any_neighbor_province = {
												holder_scope = {
													character = ROOT
												}
											}
										}
									}
								}
								random_realm_province = {
									limit = {
										ROOT_FROM = {
											NOT = {
												capital_scope = {
													title = PREVPREV
												}
											}
										}
										any_neighbor_province = {
											holder_scope = {
												character = ROOT
											}
										}
									}
									county = {
										usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
									}
								}
							}
							else = {
								random_realm_province = {
									limit = {
										ROOT_FROM = {
											NOT = {
												capital_scope = {
													title = PREVPREV
												}
											}
										}
									}
									county = {
										usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
									}
								} 
							}
						}
					}
					if = { #seros with no land calculates what to do with nomad provinces
						limit = { 
							is_offmap_governor = yes
							offmap_power = { is_offmap_tag = seros }
							seros = { has_offmap_tmp_flag = WP_is_not_on_map }
							NOT = { wealth = 2500 } #unless already rich from tributes
						}
						set_variable = { which = "WP_nomad_provinces" value = 0 }
						any_realm_province = {
							limit = { 
								has_province_modifier = nomad_agitation
								NOT = { has_settlement_construction = yes }
							}
							province_event = { id = JD.60100 } #increase counter for each nomad province
						}
						character_event = { id = JD.60101 days = 1 } #calculate gold sent from seros for building holdings
					}
					if = { #New Empire
						limit = { has_character_flag = is_rebel_general }
						set_global_flag = rebel_general_invasion_success
						primary_title = { 
							set_title_landless = { title = THIS status = no }
							set_title_flag = uses_temple_names_by_script #Titles with this flag give their heirs a temple name via on_death event
							set_title_flag = pretender_seros_empire #Blocks all grace interactions
							set_title_flag = rebel_general_title
							adjective = e_seros_west_governor_adj #Use WP adj as it is "Chinese" but also gives the right one in different languages
							random_list = { #Random Empire name that China doesn't have
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = ivellion_seros } } }
									set_name = "Ivellion Empire"
									set_title_flag = seros_name_Ivellion
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = zhuirentalon_seros } } }
									set_name = "Zhuirentalon Empire"
									set_title_flag = seros_name_Zhuirentalon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = caelynnon_seros } } }
									set_name = "Caelynnon Empire"
									set_title_flag = seros_name_Caelynnon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = edraelen_seros } } }
									set_name = "Edraelen Empire"
									set_title_flag = seros_name_Edraelen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = gelmalgaldon_seros } } }
									set_name = "Gelmalgaldon Empire"
									set_title_flag = seros_name_Gelmalgaldon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = erwedhenen_seros } } }
									set_name = "Erwedhenen Empire"
									set_title_flag = seros_name_Erwedhenen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = lysanderen_seros } } }
									set_name = "Lysanderen Empire"
									set_title_flag = seros_name_Lysanderen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = jehastran_seros } } }
									set_name = "Jehastran Empire"
									set_title_flag = seros_name_Jehastran
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = perwraekon_seros } } }
									set_name = "Perwraekon Empire"
									set_title_flag = seros_name_Perwraekon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = nacaciaen_seros } } }
									set_name = "Nacaciaen Empire"
									set_title_flag = seros_name_Nacaciaen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = shehstreken_seros } } }
									set_name = "ShehStreken Empire"
									set_title_flag = seros_name_ShehStreken
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = zocrixen_seros } } }
									set_name = "Zocrixen Empire"
									set_title_flag = seros_name_Zocrixen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = hilazieon_seros } } }
									set_name = "Hilazieon Empire"
									set_title_flag = seros_name_Hilazieon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = gokekuen_seros } } }
									set_name = "Gokekuen Empire"
									set_title_flag = seros_name_Gokekuen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = aggezzenon_seros } } }
									set_name = "Aggezzenon Empire"
									set_title_flag = seros_name_Aggezzenon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = aekteshon_seros } } }
									set_name = "Aekteshon Empire"
									set_title_flag = seros_name_Aekteshon
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = drazrosen_seros } } }
									set_name = "Drazrosen Empire"
									set_title_flag = seros_name_Drazrosen
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = thaalison_seros } } }
									set_name = "Thaalison Empire"
									set_title_flag = seros_name_Thaalison
								}
								1 = { 
									trigger = { NOT = { seros = { has_offmap_name = sheshon_seros } } }
									set_name = "Sheshon Empire"
									set_title_flag = seros_name_Sheshon
								}
							}
							add_law = {
								law = succ_primogeniture
								cooldown = no
								opinion_effect = no
							}
						}
						set_government_type = seros_government
						# random_list = { #Give a temple name
						# }
						set_character_flag = given_temple_name_by_script
						remove_special_character_title = TITLE_GENERAL
						#Some starting stuff
						wealth = 1000
						prestige = 500
						piety = 200
						seros = { set_offmap_flag = no_war_news }
						any_player = {
							limit = {
								has_offmap_news_enabled = seros
								is_within_diplo_range = PREV
							}
							narrative_event = { id = JD.60211 days = 1 }
						}
					}
				}
				if = {
					limit = {
						NOT = {
							any_demesne_title = {
								tier = EMPEROR
							}
						}
					}
					set_defacto_liege = ROOT
					if = {
						limit = {
							ROOT = { has_character_flag = is_rebel_general }
						}
						any_demesne_title = {
							limit = {
								tier = KING
							}
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							add_law = {
								law = succ_primogeniture
								cooldown = no
								opinion_effect = no
							}
						}
					}
					break = yes
				}
				any_vassal = {
					set_defacto_liege = ROOT
					if = {
						limit = { ROOT = { has_character_flag = is_rebel_general } }
						opinion = {
							modifier = opinion_subjugated 
							multiplier = 2
							who = ROOT
						}
					}
				}
				any_demesne_title = {
					limit = {
						tier = EMPEROR
						NOT = { controls_religion = yes }
					}
					destroy_landed_title = THIS
				}
				if = {
					limit = {
						NOT = {
							tier = EMPEROR
						}
					}
					set_defacto_liege = ROOT
					break = yes
				}
				any_demesne_title = {
					limit = {
						NOT = { controls_religion = yes }
					}
					ROOT = {
						grant_title_no_opinion = { target = PREV type = invasion }
					}
				}
			}
		}
	}
	
	on_fail = {
		FROM = {
			piety = 100
			participation_scaled_prestige = 250
			set_character_flag = defeated_seros
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
		ROOT = {
			piety = -100
			if = {
				limit = { has_character_flag = is_rebel_general }
				hidden_effect = {
					any_courtier = {
						move_character = FROM
						imprison = FROM
					}
					primary_title = {
						activate_title = { title = THIS status = no }
						destroy_landed_title = THIS
					}
					move_character = FROM
					ROOT = { imprison = FROM }
				}
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -500
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
				min = 1000
			}
			if = {
				limit = { has_character_flag = is_rebel_general }
				hidden_effect = {
					any_courtier = {
						move_character = FROM
						imprison = FROM
					}
					primary_title = {
						activate_title = { title = THIS status = no }
						destroy_landed_title = THIS
					}
					move_character = FROM
					ROOT = { imprison = FROM }
				}
			}
			hidden_effect = {
				if = { #Makes seros have a chance of leaving Expanionist policy...
					limit = {
						NOT = {
							has_character_flag = is_rebel_general
						}
						is_offmap_tag = seros
						seros = {
							has_policy = seros_expansionist
						}
					}
					random = {
						chance = 50
						seros = {
							set_policy = seros_open
						}
						log = "seros War Logging: seros was forced out of Expansionism"
						if = {
							limit = {
								seros = {
									has_status = seros_stable
								}
							}
							random = {
								chance = 30
								seros = {
									set_status = seros_unrest
								}
								log = "seros War Logging: seros was forced into Unrest"
							}
						}
					}
				}
				log = "seros War Logging: seros lost a submission war against [FROM.GetBestName]"
			}
		}
		FROM = {
			set_character_flag = defeated_seros
			piety = 500
			# if = {
				# limit = { 
					# has_dlc = "Legacy of Rome"
					# OR = { 
						# has_landed_title = e_byzantium
						# has_landed_title = e_roman_empire
					# }
						# OR = { 
							# religion_group = christian
							# religion = hellenic_pagan
							# religion = hellenic_pagan_reformed
						# }
				# }
				# hidden_tooltip = { character_event = { id = LoR.30 days = 12 } }
			# }
			participation_scaled_prestige = 2500
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
	}

	on_attacker_leader_death = {
		if = {
			limit = { ROOT = { has_character_flag = is_rebel_general } }
			end_war = invalid
			ROOT = {
				any_courtier = { death = { death_reason = death_went_back_to_seros } }
				primary_title = {
					activate_title = { title = THIS status = no }
					destroy_landed_title = THIS
				}
				death = { death_reason = death_went_back_to_seros }
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = { 
		factor = 0
	}
}

seros_tributary_offmap_cb = {
	name = CB_NAME_PERMANENT_TRIBUTARY
	war_name = WAR_NAME_PERMANENT_TRIBUTARY
	sprite = 30
	truce_days = 365
	hostile_against_others = yes
	can_ask_to_join_war = no
	display_on_map = no
	allowed_to_target_tributaries = no
	
	defender_unoccupied_warscore = yes
	
	can_use = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
			NOT = { is_liege_or_above = FROM }
			mercenary = no
		}
		
		FROM = {
			independent = yes
			in_revolt = no
		}
	}

	is_valid = {
		NOT = {
			ROOT = {
				rightful_religious_head_scope = {
					character = FROM 
				}
			}
		}
	}

	on_success = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] invasion of [From.GetTitledName] has ended"
		log = "The war ended in a victory for seros"
		log = "[From.GetTitledName] is now tributary of seros"
		log = "---------------------"
		FROM = {
			save_event_target_as = target_loser
			prestige = -100
			custom_tooltip = {
				text = "REMOVE_PREVIOUS_SUZERAIN"
				hidden_tooltip = {
					any_suzerain = {
						event_target:target_loser = {
							remove_tributary = PREV
						}
					}
				}
			}
			if = { # Remove Raid seros if active
				limit = {
					has_character_modifier = seros_raid_active
				}
				remove_character_modifier = seros_raid_active
				hidden_effect = {
					add_character_modifier = {
						name = seros_raid_grace_cd
						hidden = yes
						years = 5
					}
				}
			}
		}

		ROOT = {
			prestige = 200
			make_tributary = { who = FROM tributary_type = offmap }
		}
	}

	on_fail = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] invasion of [From.GetTitledName] has ended"
		log = "The war ended in a white peace"
		log = "---------------------"
		ROOT = {
			prestige = -200
		}
		FROM = {
			prestige = 200
			set_character_flag = defeated_seros
		}
	}

	on_reverse_demand = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] invasion of [From.GetTitledName] has ended"
		log = "The war ended in a victory for [From.GetTitledName]"
		log = "---------------------"
		ROOT = {
			prestige = -500
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
				min = 1000
			}
			hidden_effect = {
				if = { #Makes seros have a chance of leaving Expansionist policy...
					limit = {
						is_offmap_tag = seros
						seros = {
							has_policy = seros_expansionist
						}
					}
					random = {
						chance = 50
						seros = {
							set_policy = seros_open
						}
					}
				}
				log = "seros War Logging: seros lost a I'll-make-you-my-tributary war against [From.GetBestName]"
			}
		}

		FROM = {
			piety = 500
			participation_scaled_prestige = 2500
			set_character_flag = defeated_seros
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
	}
	
	on_attacker_leader_death = {
		#end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

dismantle_pretender_seros_cb = {
	name = CB_NAME_DISMANTLE_PRETENDER_seros
	war_name = WAR_NAME_DISMANTLE_PRETENDER_seros
	sprite = 30
	truce_days = 365
	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	
	defender_unoccupied_warscore = yes
	
	can_use = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
			NOT = { is_liege_or_above = FROM }
			mercenary = no
		}
		
		FROM = {
			primary_title = { has_title_flag = rebel_general_title }
		}
	}

	on_success = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war ended in a victory for seros"
		log = "[From.GetTitledName] is now dismantled of seros"
		log = "---------------------"
		FROM = {
			custom_tooltip = { 
				text = dismantle_pretender_seros_success_tt
				hidden_effect = {
					seros = { set_offmap_flag = no_war_news }
					any_player = {
						limit = {
							NOT = { character = ROOT_FROM }
							OR = {
								AND = {
									has_offmap_news_enabled = seros
									is_within_diplo_range = ROOT
								}
								liege = { character = ROOT_FROM }
							}
						}
						narrative_event = { id = JD.60209 }
					}
					any_courtier = { death = { death_reason = death_executed_by_seros_emperor } }
					primary_title = {
						activate_title = { title = THIS status = no }
						destroy_landed_title = THIS
					}
					death = { death_reason = death_executed_by_seros_emperor }
				}
			}
		}
		ROOT = {
			prestige = 200
		}
	}

	on_fail = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war ended in a white peace for seros"
		log = "---------------------"
		FROM = {
			piety = 100
			participation_scaled_prestige = 250
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
		ROOT = {
			piety = -100
		}
	}

	on_reverse_demand = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war ended in a defeat for seros"
		log = "---------------------"
		ROOT = {
			piety = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
				min = 500
			}
			offmap_power = { set_offmap_tmp_flag = pretender_seros_empire_war_cooldown }
		}
		FROM = {
			piety = 200
			participation_scaled_prestige = 1000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
	}
	
	on_attacker_leader_death = {
		log = "---------------------"
		log = "seros Logging:"
		log = "The [seros.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war was invalidated for seros"
		log = "---------------------"
		#end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

force_open_seros_cb = {
	name = CB_NAME_FORCE_OPEN_seros
	war_name = WAR_NAME_FORCE_OPEN_seros
	sprite = 30
	truce_days = 365
	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	max_attacker_battle_score = 100
	capturing_defender_is_complete_victory = no
	
	can_use = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
			NOT = { is_liege_or_above = FROM }
			mercenary = no
		}
		
		FROM = {
			is_offmap_governor = yes
			offmap_power = { is_offmap_tag = seros }
		}
	}

	is_valid = {
		seros = { has_policy = seros_isolationist }
	}

	on_success = {
		FROM = {
			save_event_target_as = target_governor
			offmap_power = { 
				set_offmap_flag = no_policy_news
				set_policy = seros_open
				log = "--------------------------------"
				log = "seros Policy Logging:"
				log = "seross new Policy is now OPEN"
				log = "-------------------------------------"
				set_offmap_tmp_flag = seros_forced_open
				set_offmap_flag = no_war_news
				custom_tooltip = { text = seros_forced_open_tt }
				hidden_effect = {
					any_player = {
						limit = {
							has_offmap_news_enabled = PREV
							is_within_diplo_range = PREV
						}
						narrative_event = { id = JD.60302 }
					}
					clr_offmap_flag = no_policy_news
				}
				clr_offmap_tmp_flag = seros_force_open_in_progress
			}
		}
		ROOT = {
			participation_scaled_prestige = 1000
			add_grace_massive_effect = yes
			add_character_modifier = {
				modifier = seros_favored_in_trade
				inherit = yes
				years = 25
			}
		}
		FROM = {
			transfer_scaled_wealth = {
				to = ROOT
				value = 5.0
				min = 2000
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 300 }
		}
	}

	on_fail = {
		FROM = {
			piety = 100
			participation_scaled_prestige = 50
			hidden_effect = { offmap_power = { clr_offmap_tmp_flag = seros_force_open_in_progress } }
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		ROOT = {
			prestige = -150
		}
	}

	on_reverse_demand = {
		ROOT = {
			show_scope_change = no
			prestige = -300
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
				min = 500
			}
			custom_tooltip = {
				text = angered_seros_tt #Scripter! Update this is you change the value below.
				add_character_modifier = {
					modifier = angered_seros_modifier
					inherit = yes
					years = 50
				}
			}
		}
		FROM = {
			piety = 200
			participation_scaled_prestige = 100
			hidden_effect = {
				offmap_power = {
					set_offmap_flag = no_war_news
					any_player = {
						limit = {
							has_offmap_news_enabled = PREV
							is_within_diplo_range = PREV
						}
						narrative_event = { id = JD.60303 }
					}
					clr_offmap_tmp_flag = seros_force_open_in_progress
				}
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}
	
	on_attacker_leader_death = {
		#end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

destabilization_seros_cb = {
	name = CB_NAME_DESTABILIZATION_seros
	war_name = WAR_NAME_DESTABILIZATION_seros
	sprite = 30
	truce_days = 365
	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	
	defender_unoccupied_warscore = yes
	
	can_use = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
			NOT = { is_liege_or_above = FROM }
			mercenary = no
		}
	}

	on_success = {
		FROM = {
			custom_tooltip = {
				text = destabilization_seros_success_tt
				hidden_effect = {
					seros = { set_offmap_flag = no_war_news }
					any_player = {
						limit = {
							NOT = { character = ROOT_FROM }
							OR = {
								AND = {
									has_offmap_news_enabled = seros
									is_within_diplo_range = ROOT
								}
								liege = { character = ROOT_FROM }
							}
						}
						narrative_event = { id = JD.60209 }
					}
					any_demesne_title = {
						limit = {
							higher_tier_than = DUKE
							NOR = {
								controls_religion = yes
								clan = yes
							}
						}
						unsafe_destroy_landed_title = THIS
					}
					#death = { death_reason = death_executed_by_seros_emperor }
				}
			}
		}
		ROOT = {
			prestige = 200
		}
	}

	on_fail = {
		FROM = {
			piety = 100
			participation_scaled_prestige = 250
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
		ROOT = {
			piety = -100
		}
	}

	on_reverse_demand = {
		ROOT = {
			piety = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
				min = 1000
			}
		}
		FROM = {
			piety = 500
			participation_scaled_prestige = 2500
			set_character_flag = defeated_seros
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
	}
	
	on_attacker_leader_death = {
		#end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

invasion_of_seros_cb = {
	name = CB_NAME_INVASION_OF_seros
	war_name = WAR_NAME_INVASION_OF_seros
	sprite = 30
	truce_days = 365
	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	battle_warscore_mult = 1.5
	max_attacker_occupation_score = 50
	max_defender_occupation_score = 50
	max_attacker_battle_score = 100
	capturing_defender_is_complete_victory = no
	third_party_portrait = event_target:invasion_of_seros_claimant

	# attacker_unoccupied_warscore = yes - If attacker completely unoccupied, attacker will get ticking warscore. Only works if no title is targetted
	# defender_unoccupied_warscore = yes - If defender completely unoccupied, defender will get ticking warscore. Only works if no title is targetted
	
	can_use = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
			NOT = { is_liege_or_above = FROM }
			mercenary = no
		}
		FROM = {
			is_offmap_governor = yes
			offmap_power = { is_offmap_tag = seros }
		}
	}

	is_valid = { event_target:invasion_of_seros_claimant = { is_alive = yes } }

	on_success = {
		ROOT = {
			show_scope_change = no
			custom_tooltip = {
				text = invasion_of_seros_success_tt
				hidden_effect = {
					remove_character_modifier = seros_raid_active
					event_target:invasion_of_seros_claimant = {
						betrothed = { break_betrothal = PREV }
						spouse = {
							if = {
								limit = {
									is_ruler = no
									is_primary_heir = no
								}
								leave_court_for_seros_effect = yes
							}
						}
						any_child = {
							if = {
								limit = {
									is_ruler = no
									is_primary_heir = no
								}
								leave_court_for_seros_effect = yes
							}
						}
						abdicate = yes
						any_claim = {
							remove_claim = event_target:invasion_of_seros_claimant
						}
						clr_character_flag = no_court_invites
						remove_trait = cannot_marry
						diplomatic_immunity = no
					}
					seros = {
						governor = {
							any_vassal = {
								set_defacto_liege = ROOT
							}
							any_demesne_title = {
								limit = {
									NOT = {
										tier = EMPEROR
									}
								}
								grant_title = ROOT
							}
						}
						ROOT = {
							if = {
								limit = { government = seros_government }
								seros = { set_offmap_flag = rename_override }
								primary_title = {
									trigger_switch = {
										on_trigger = has_title_flag
										seros_name_Ivellion = { seros = { set_offmap_name = "ivellion_seros" } }
										seros_name_Zhuirentalon = { seros = { set_offmap_name = "zhuirentalon_seros" } }
										seros_name_Caelynnon = { seros = { set_offmap_name = "caelynnon_seros" } }
										seros_name_Edraelen = { seros = { set_offmap_name = "edraelen_seros" } }
										seros_name_Gelmalgaldon = { seros = { set_offmap_name = "gelmalgaldon_seros" } }
										seros_name_Erwedhenen = { seros = { set_offmap_name = "erwedhenen_seros" } }
										seros_name_Lysanderen = { seros = { set_offmap_name = "lysanderen_seros" } }
										seros_name_Jehastran = { seros = { set_offmap_name = "jehastran_seros" } }
										seros_name_Perwraekon = { seros = { set_offmap_name = "perwraekon_seros" } }
										seros_name_Nacaciaen = { seros = { set_offmap_name = "nacaciaen_seros" } }
										seros_name_ShehStreken = { seros = { set_offmap_name = "shehstreken_seros" } }
										seros_name_Zocrixen = { seros = { set_offmap_name = "zocrixen_seros" } }
										seros_name_Hilazieon = { seros = { set_offmap_name = "hilazieon_seros" } }
										seros_name_Gokekuen = { seros = { set_offmap_name = "gokekuen_seros" } }
										seros_name_Aggezzenon = { seros = { set_offmap_name = "aggezzenon_seros" } }
										seros_name_Drazrosen = { seros = { set_offmap_name = "drazrosen_seros" } }
										seros_name_Thaalison = { seros = { set_offmap_name = "thaalison_seros" } }
										seros_name_Sheshon = { seros = { set_offmap_name = "sheshon_seros" } }
									}
									clr_title_flag = pretender_seros_empire
									clr_title_flag = uses_temple_names_by_script
									clear_flags_with_prefix = temple_name_
									clear_flags_with_prefix = seros_name_
									set_name = "[Root.Capital.GetName] Empire"
								}
								clr_character_flag = given_temple_name_by_script
								set_name = ""
								if = {
									limit = {
										religion_group = muslim
									}
									set_government_type = muslim_government
								}
								else_if = {
									limit = {
										OR = {
											culture = halfling
											culture = khatin
											culture = tabotan
											culture = gugari
											AND = {
												culture = shou
												religion = padhran
											}
										}
										higher_tier_than = BARON
									}
									set_government_type = theocratic_feudal_government
								}
								else = {
									set_government_type = feudal_government
								}
							}
						}
						set_offmap_flag = no_succession_news
						set_offmap_flag = no_war_news
						clr_offmap_flag = seros_invaded_player_dynasty
						set_offmap_flag = seros_invaded_player_dynasty
						set_offmap_holder = event_target:invasion_of_seros_claimant
						clr_offmap_flag = no_succession_news
						clr_offmap_flag = rename_override
						
						if = {
							limit = {
								NOR = {
									has_status = seros_stable
									has_status = seros_golden_age
								}
							}
							set_offmap_flag = no_status_news
							set_status = seros_stable
							clr_offmap_flag = no_status_news
						}
					}
					any_player = {
						limit = {
							OR = {
								AND = {
									has_offmap_news_enabled = seros
									is_within_diplo_range = FROM
								}
								liege = { character = ROOT }
							}
						}
						narrative_event = { id = JD.60401 }
					}
				}
			}
			participation_scaled_prestige = 5000
			set_offmap_currency = { offmap = seros value = 5000 }
			wealth = 10000
			add_character_modifier = { name = seros_favored_in_trade inherit = yes years = 50 }
			if = {
				limit = { NOT = { has_artifact = seros_jade_dragon } }
				add_artifact = seros_jade_dragon
			}
			if = {
				limit = { NOT = { has_artifact = seros_dragon_amulet } }
				add_artifact = seros_dragon_amulet
			}
			if = {
				limit = { NOT = { has_artifact = seros_water_clock } }
				add_artifact = seros_water_clock
			}
			if = {
				limit = { NOT = { has_artifact = seros_jian_sword } }
				add_artifact = seros_jian_sword
			}
			hidden_effect = { add_character_modifier = { name = peace_deal_with_seros inherit = yes years = 50 } }
			remove_character_modifier = seros_raid_active
			remove_character_modifier = war_with_seros_modifier
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 2000 }
		}
		clear_global_event_target = invasion_of_seros_claimant
	}

	on_invalidation = {
		FROM = {
			piety = 200
			participation_scaled_prestige = 250
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
		ROOT = {
			prestige = -2500
			remove_character_modifier = war_with_seros_modifier
			custom_tooltip = {
				text = invasion_of_seros_cb_fail_tt
				hidden_effect = { add_character_modifier = { name = failed_invasion_of_seros duration = -1 hidden = yes } }
			}
			hidden_effect = {
				seros = { set_offmap_flag = no_war_news }
				any_player = {
					limit = {
						OR = {
							AND = {
								has_offmap_news_enabled = seros
								is_within_diplo_range = FROM
							}
							liege = { character = ROOT }
						}
					}
					narrative_event = { id = JD.60403 }
				}
			}
			custom_tooltip = {
				text = angered_seros_tt #Scripter! Update this is you change the value below.
				add_character_modifier = {
					modifier = angered_seros_modifier
					inherit = yes
					years = 50
				}
			}
		}
		clear_global_event_target = invasion_of_seros_claimant
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -3000
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
				min = 5000
			}
			remove_character_modifier = war_with_seros_modifier
			custom_tooltip = {
				text = invasion_of_seros_cb_fail_tt
				hidden_effect = { add_character_modifier = { name = failed_invasion_of_seros duration = -1 hidden = yes } }
			}
			custom_tooltip = {
				text = destabilization_seros_success_tt
				hidden_effect = { 
					seros = { set_offmap_flag = no_war_news }
					any_player = {
						limit = {
							OR = {
								AND = {
									has_offmap_news_enabled = seros
									is_within_diplo_range = FROM
								}
								liege = { character = ROOT }
							}
						}
						narrative_event = { id = JD.60402 }
					}
					any_demesne_title = {
						limit = {
							higher_tier_than = DUKE
							NOR = {
								controls_religion = yes
								clan = yes
							}
						}
						destroy_landed_title = THIS
					}
				}
			}
			custom_tooltip = {
				text = angered_seros_tt #Scripter! Update this is you change the value below.
				add_character_modifier = {
					modifier = angered_seros_modifier
					inherit = yes
					years = 50
				}
			}
		}
		FROM = {
			piety = 200
			participation_scaled_prestige = 1000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		clear_global_event_target = invasion_of_seros_claimant
	}
	
	on_attacker_leader_death = {
		#end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}
